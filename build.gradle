buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


apply plugin: 'java'
//apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

test {
	reports.html.enabled = true
}

repositories {
	maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
	mavenCentral()
	maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}


ext {
	springBootAdminVersion = '2.1.0-SNAPSHOT'
	springStatemachineVersion = '2.0.1.RELEASE'
}

dependencies {
	compile group: 'com.alibaba', name: 'fastjson', version: '1.2.51'
	compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.0.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'
    compile group: 'tk.mybatis', name: 'mapper-spring-boot-starter', version: '2.0.4'
	compile group: 'com.google.guava', name: 'guava', version: '27.0-jre'
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-amqp')
	implementation('org.springframework.boot:spring-boot-starter-aop')
	implementation('org.springframework.boot:spring-boot-starter-batch')
	implementation('org.springframework.boot:spring-boot-starter-cache')
	implementation('org.springframework.boot:spring-boot-starter-data-elasticsearch')
//	implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
	implementation('org.springframework.boot:spring-boot-starter-data-redis')
	implementation('org.springframework.boot:spring-boot-starter-jersey')
	implementation('org.springframework.boot:spring-boot-starter-mail')
	implementation('org.springframework.boot:spring-boot-starter-quartz')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')
	implementation('org.springframework.boot:spring-boot-starter-validation')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.springframework.boot:spring-boot-starter-web-services')
	implementation('org.springframework.boot:spring-boot-starter-webflux')
	implementation('org.springframework.boot:spring-boot-starter-websocket')
	implementation('de.codecentric:spring-boot-admin-starter-client')
	implementation('de.codecentric:spring-boot-admin-starter-server')
	implementation('org.apache.kafka:kafka-streams')
	implementation('org.springframework.kafka:spring-kafka')
	implementation('org.springframework.retry:spring-retry')
	implementation('org.springframework.session:spring-session-data-redis')
	implementation('org.springframework.statemachine:spring-statemachine-starter')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('mysql:mysql-connector-java')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compile('org.projectlombok:lombok')
	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:2.7.19'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('io.projectreactor:reactor-test')
	testImplementation('org.springframework.batch:spring-batch-test')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	testImplementation('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
	}
}
